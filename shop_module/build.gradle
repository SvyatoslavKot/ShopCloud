plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'org.flywaydb.flyway'  version '8.5.12'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    jaxb
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

project.ext {
    jaxbTargetDir = file("src/main/java/com/example/shop_module/xsd")
}


ext {
    set('springCloudVersion', "2021.0.3")
}



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation group: 'org.webjars', name: 'sockjs-client', version: '1.5.1'
    implementation group: 'org.webjars', name: 'stomp-websocket', version: '2.3.3-1'
    implementation group: 'org.webjars', name: 'jquery',version: '3.4.1'
    implementation group: 'org.webjars', name: 'webjars-locator', version: '0.40'

    implementation group: 'org.json', name: 'json', version: '20090211'

    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation group: 'wsdl4j', name: 'wsdl4j'


    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.4.2.Final'
    implementation group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.4.2.Final'
    annotationProcessor 'org.projectlombok:lombok'
    jaxb (
            'com.sun.xml.bind:jaxb-xjc:2.3.1',
            'com.sun.xml.bind:jaxb-impl:2.3.1',
           'org.glassfish.jaxb:jaxb-runtime:2.3.3'
    )

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

flyway{
    url = 'jdbc:postgresql://localhost:5432/shopDJPA'
    user = 'postgres'
    password = '0000'
    schemas = ['public']
}

task jaxb {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/main/java/com/example/shop_module/xsd")
    doLast {
        jaxbTargetDir.mkdirs()
        ant.taskdef(
               name: 'xjc',
                classname: 'com.sun.tools.xjc.XJCTask',
               classpath: configurations.jaxb.asPath
        )
        ant.jaxbTargetDir = jaxbTargetDir
        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'greting',
                schema: 'src/main/resources/ws/greeting.xsd'
        )
        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'product',
                schema: 'src/main/resources/ws/product.xsd'
        )
    }
}

//compileJava.dependsOn jaxb

tasks.named('test') {
    useJUnitPlatform()
}
