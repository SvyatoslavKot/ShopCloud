server.port=8089

spring.application.name=shop_module

eureka.client.service-url.defaultZone=http://localhost:8761/eureka

eureka.instance.instance-id=${spring.application.name}:${random.value}

spring.datasource.driver-class-name=org.postgresql.Driver


logging.level.org.springframework.security = DEBUG
spring.datasource.url=jdbc:postgresql://localhost:5432/shopDJPA
spring.datasource.username=postgres
spring.datasource.password=0000
spring.datasource.driverClassName=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true

jwt.secret=secretKey
auth.cookie.auth= AUTH-TOKEN
auth.cookie.expiration-auth=600000
auth.cookie.path=/

spring.rabbitmq.host=localhost
spring.data.mongodb.port=15672
spring.rabbitmq.username=quest
spring.rabbitmq.password=quest

rabbitmq.exchange=topic-exchange
rabbitmq.exchange.shop=topic-shop
rabbitmq.routingkey=myrabbitmq.routingkey
rabbitmq.routingkey-shop=myrabbitmq.routingkey-shop
rabbitmq.queue=myrabbitmq.queue
rabbitmq.queue-shop=myrabbitmq.queue-shop

rabbitmq.exchange.productGetById=topic-exchange-productGet
rabbitmq.routingkey.productGetById=routingKey-productsGet
rabbitmq.queue.productGetById=queue-productGet

rabbitmq.exchange.productAddBucket=topic-exchange-prAddBucket
rabbitmq.routingkey.productAddBucket=routingKey-prAddBucket
rabbitmq.queue.productAddBucket=queue-prAddBucket

rabbitmq.exchange.productGetBucket=topic-exchange-prGetBucket
rabbitmq.routingkey.productGetBucket=routingKey-prGetBucket
rabbitmq.queue.productGetBucket=queue-prGetBucket

rabbitmq.exchange.productRemoveFromBucket=topic-exchange-prRemoveFromBucket
rabbitmq.routingkey.productRemoveFromBucket=routingKey-prRemoveFromBucket
rabbitmq.queue.productRemoveFromBucket=queue-prRemoveFromBucket

rabbitmq.exchange.productConfirmOrder=topic-exchange-prConfirmOrder
rabbitmq.routingkey.productConfirmOrder=routingKey-prConfirmOrder
rabbitmq.queue.productConfirmOrder=queue-prConfirmOrder

rabbitmq.exchange.productGetAll=topic-exchange-prGetAll
rabbitmq.routingkey.productGetAll=routingKey-prGetAll
rabbitmq.queue.productGetAll=queue-prGetAll

rabbitmq.exchange.productAdd=topic-exchange-prAdd
rabbitmq.routingkey.productAdd=routingKey-prAdd
rabbitmq.queue.productAdd=queue-prAdd
rabbitmq.queue.productAddForOrder=queue-prAddForOrder

rabbitmq.exchange.shopclientNew=topic-exchange-shopclientNew
rabbitmq.routingkey.shopclientNew=routingKey-shopclientNew
rabbitmq.queue.shopclientNew=queue-shopclientNew

rabbitmq.exchange.shopclientGetClient = topic-exchange-shopclientGetClient
rabbitmq.routingkey.shopclientGetClient = routingKey-shopclientGetClient
rabbitmq.queue.shopclientGetClient = queue-shopclientGetUser

rabbitmq.exchange.orderCreate = topic-exchange-orderCreate
rabbitmq.routingkey.orderCreate = routingKey-orderCreate
rabbitmq.queue.orderCreate = queue-orderCreate

rabbitmq.exchange.orderGet = topic-exchange-orderGet
rabbitmq.routingkey.orderGet = routingKey-orderGet
rabbitmq.queue.orderGet = queue-orderGet

rabbitmq.exchange.orderUpdate = topic-exchange-orderUpdate
rabbitmq.routingkey.orderUpdate = routingKey-orderUpdate
rabbitmq.queue.orderUpdate = queue-orderUpdate


rabbitmq.exchange.shopclientUpdateClient = "fanout-exchange-updateclient"
rabbitmq.routingkey.shopclientUpdateClient = routingKey-shopclientUpdateClient
rabbitmq.queue.shopclientUpdateClientToClientmodule = queue-shopclientUpdateClient
rabbitmq.queue.shopclientUpdateClientToAuthmodule = queue-shopclientUpdateClientAuth

rabbitmq.exchange.AUTH-login=topic-exchange-auth_login
rabbitmq.routingkey.AUTH-login=routingKey-auth_login
rabbitmq.queue.AUTH-login=queue-auth_login



